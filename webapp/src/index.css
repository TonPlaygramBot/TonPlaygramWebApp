@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --cell-width: 135px;
  /* Slightly taller default height for snake board cells */
  --cell-height: 80px;
}

body {
  font-family: Arial, Helvetica, sans-serif;
  margin: 0;
  @apply bg-background text-text overflow-x-hidden;
  text-shadow: 0 0 4px #00f7ff;
}

/* Neon theme elements */
.border-border {
  box-shadow: 0 0 8px #00f7ff;
}

.bg-surface {
  background:
    radial-gradient(2px 2px at 20% 30%, rgba(255, 255, 255, 0.15), transparent 40%),
    radial-gradient(1.5px 1.5px at 80% 70%, rgba(255, 255, 255, 0.1), transparent 50%),
    linear-gradient(#081428, #102040);
  background-color: #0b1a2f;
  box-shadow: inset 0 0 10px rgba(0, 247, 255, 0.4);
}

.text-text {
  text-shadow: 0 0 4px #00f7ff;
}

button,
input {
  border-color: #00f7ff;
  color: #00f7ff;
  box-shadow: 0 0 6px rgba(0, 247, 255, 0.6);
}

button:focus,
input:focus {
  outline: none;
  box-shadow: 0 0 10px #00f7ff;
}

/* Utility class for white text with a subtle black shadow */
.text-white-shadow {
  color: #ffffff;
  text-shadow: 0 0 2px #000;
}

.hexagon {
  /* perfect hexagon with equal inner distances */
  clip-path: polygon(50% 0%, 93% 25%, 93% 75%, 50% 100%, 7% 75%, 7% 25%);
}

.hex-table {
  clip-path: polygon(50% 0%, 93% 25%, 93% 75%, 50% 100%, 7% 75%, 7% 25%);
  /* Transparent background so the board remains visible */
  background: transparent;
  border: 4px solid #b22222;
}

.player-avatar {
  @apply w-12 h-12 rounded-full border border-yellow-400;
}

.board-3d {
  perspective: 800px;
}

.board-3d-grid {
  transform: rotateX(30deg) rotateZ(45deg);
  transform-style: preserve-3d;
}

.board-frame {
  @apply border-4 border-accent rounded-lg p-1 bg-surface;
  transform-style: preserve-3d;
}

/* Tilted view specifically for the Snake & Ladder board */
.snake-board-tilt {
  perspective: 1200px;
}

.snake-board-grid {
  transform-style: preserve-3d;
  transform-origin: bottom center;
  transition: transform 0.3s ease; /* âœ… scaling transition */
}


/* Full-screen stage behind the Snake & Ladder board */
.background-behind-board {
  position: absolute;
  left: 0;
  right: 0;
  top: -20px;
  bottom: -160px;
  z-index: -1;
  pointer-events: none;
  background: radial-gradient(circle at center, #164e63, #0f172a);
  /* slightly brighter and scaled up */
  filter: brightness(2.4);
  transform: translateY(90px) scale(1.2);
}

/* Adjusted placement for Crazy Dice Duel */
.crazy-dice-bg {
  top: 0;
  bottom: 0;
  /* Center the background image */
  filter: brightness(3);
  transform: translateY(90px) scale(1.2);
}

/* Overlay grid covering the entire background image */
.board-grid-overlay {
  position: absolute;
  left: 0;
  right: 0;
  top: -20px;
  bottom: -160px;
  pointer-events: none;
  transform: translateY(90px) scale(1.2);
  z-index: 0;
}

@keyframes roll {
  0% {
    transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg) translateY(0);
  }
  50% {
    transform: rotateX(360deg) rotateY(360deg) rotateZ(360deg) translateY(-1rem);
  }
  100% {
    transform: rotateX(720deg) rotateY(720deg) rotateZ(720deg) translateY(0);
  }
}

.animate-roll {
  animation: roll 0.5s ease-in-out;
}

.dice-container {
  perspective: 600px;
}

/* Slightly smaller dice for Crazy Dice Duel */
.crazy-dice {
  transform: scale(0.8);
}

.dice-cube {
  @apply relative w-12 h-12 bg-white rounded-xl;
  border: none;
  transform-style: preserve-3d;
  transition: transform 0.5s;
}

.dice-face {
  @apply absolute w-full h-full flex items-center justify-center bg-white rounded-xl shadow-lg;
  border: none;
}

.dice-face .dot {
  @apply w-2 h-2 bg-black rounded-full;
}

.dice-face--front {
  transform: rotateY(0deg) translateZ(1.5rem);
}
.dice-face--back {
  transform: rotateY(180deg) translateZ(1.5rem);
}
.dice-face--right {
  transform: rotateY(90deg) translateZ(1.5rem);
}
.dice-face--left {
  transform: rotateY(-90deg) translateZ(1.5rem);
}
.dice-face--top {
  transform: rotateX(90deg) translateZ(1.5rem);
}
.dice-face--bottom {
  transform: rotateX(-90deg) translateZ(1.5rem);
}

.board-cell {
  @apply relative flex items-center justify-center rounded-xl text-text;
  background-color: var(--tile-bg, #0e3b45);
  /* Subtle border to separate tiles */
  border: 2px solid #334155;
  /* Cast a shadow dark enough for a stronger 3D effect */
  box-shadow: 0 8px 12px rgba(0, 0, 0, 0.6);
  transform: translateZ(5px);
  transform-style: preserve-3d;
  overflow: visible;
  width: var(--cell-width);
  height: var(--cell-height);
}

.board-cell::after {
  content: "";
  position: absolute;
  inset: 2px;
  border-radius: inherit;
  /* Soft inner shadow */
  box-shadow: 0 0 6px rgba(0, 0, 0, 0.6);
  /* Place the highlight above the tile so the shading is visible */
  transform: translateZ(6px);
}

.token {
  @apply absolute w-16 h-16 rounded-full shadow-lg object-cover;
  transform: translateZ(10px);
}

/* Player photo on a hexagonal cylinder */
/* Deprecated hexagonal token - kept for reference */
.player-token {
  position: absolute;
  width: 4rem;
  height: 4rem;
  transform-style: preserve-3d;
  transform: translateZ(10px);
  --cyl-h: 1.5rem; /* half of dice size */
  --token-radius: 2rem;
  --cyl-apothem: calc(var(--token-radius) * 0.866); /* distance from center */
  --side-color: #facc15; /* default amber */
  --border-color: #d97706;
}

/* New cube-style token */
.token-cube {
  position: absolute;
  width: 4rem;
  height: 4rem;
  transform: translateZ(10px);
  transform-style: preserve-3d;
  --side-color: #fde047; /* yellow-300 */
  --border-color: #d97706; /* amber-600 */
}

/* Dice-style token replacing player photo */
.token-dice {
  position: absolute;
  width: 4rem;
  height: 4rem;
  transform: translateZ(10px);
  transform-style: preserve-3d;
}

.token-dice .dice-cube {
  width: 100%;
  height: 100%;
}

.token-dice .dice-face {
  background-color: #fff;
  border: none;
  border-radius: 0.5rem;
}

.token-dice .dice-face .dot {
  @apply w-2 h-2 bg-black;
}

/* Three.js token container */
.token-three {
  position: absolute;
  /* shrink token slightly */
  width: 6.6rem;
  height: 6.6rem;
  /* lower the token an additional 5% */
  transform: translateZ(32px);
  /* Preserve 3D space so the photo can be positioned in depth */
  transform-style: preserve-3d;
  pointer-events: none;
}

.token-three.jump {
  animation: token-jump 0.4s ease-out;
}

.token-three.start {
  transform: translateY(20%) translateZ(32px);
}

.token-three.small {
  transform: translateZ(32px) scale(0.25);
}

.token-three.burning {
  animation: token-burn 1.5s forwards;
}

.token-three.burning::after {
  content: "\1F525"; /* fire emoji */
  position: absolute;
  top: 50%;
  left: 48%;
  transform: translate(-50%, -50%) translateZ(40px);
  font-size: 6rem;
  pointer-events: none;
  animation: flame-up 1.5s forwards;
}

@keyframes token-burn {
  to {
    opacity: 0;
    transform: translateZ(32px) scale(0.3);
  }
}

@keyframes flame-up {
  to {
    opacity: 0;
    transform: translate(-50%, -80%) translateZ(40px) scale(4);
  }
}

/* Larger token variant used for inactive pieces */
.token-three.inactive {
  width: 6.6rem;
  height: 6.6rem;
  transform: translateZ(32px);
}

@keyframes token-jump {
  0%,
  100% {
    transform: translateZ(32px);
  }
  50% {
    transform: translateY(-20px) translateZ(32px);
  }
}

.pot-token {
  /* enlarge pot token 50% further */
  width: 14.8rem;
  height: 14.8rem;
  transform: translateY(-8rem);
}

.pot-icon {
  position: absolute;
  width: 4rem;
  height: 4rem;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -110%) translateZ(20px)
    rotateX(calc(var(--board-angle, 58deg) * -1 + 20deg));
  pointer-events: none;
  z-index: 3;
}

.token-three canvas {
  width: 100%;
  height: 100%;
  display: block;
}

.token-photo {
  position: absolute;
  width: 2.7rem;
  height: 2.7rem;
  top: 50%;
  left: 50%;
  transform-origin: center;
  /* Position photo so its bottom aligns with the token top centre */
  transform: translate(-50%, -100%) translateZ(15.2px)
    rotateX(calc(var(--board-angle, 58deg) * -1 - 10deg));
  object-fit: cover;
  border-radius: 50%;
  border: 4px solid var(--token-border-color, #ffd700);
  transition: border-color 0.3s ease, border-width 0.3s ease;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.4);
  pointer-events: none;
  z-index: 1;
}



.timer-ring {
  position: absolute;
  /* match the player photo size so the ring wraps perfectly */
  width: 2.7rem;
  height: 2.7rem;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) translateZ(15.2px)
    rotateX(calc(var(--board-angle, 58deg) * -1 - 10deg));
  border-radius: 50%;
  pointer-events: none;
  z-index: 0;
  background: var(--timer-gradient);
  -webkit-mask: radial-gradient(farthest-side, transparent 65%, black 66%);
          mask: radial-gradient(farthest-side, transparent 65%, black 66%);
}

.avatar-timer-ring {
  position: absolute;
  inset: 0;
  border-radius: 50%;
  pointer-events: none;
  background: var(--timer-gradient);
  -webkit-mask: radial-gradient(farthest-side, transparent 65%, black 66%);
          mask: radial-gradient(farthest-side, transparent 65%, black 66%);
}

.rank-number {
  position: absolute;
  top: -0.3rem;
  right: -0.3rem;
  width: 1rem;
  height: 1rem;
  font-size: 0.6rem;
  @apply flex items-center justify-center rounded-full bg-slate-800 text-white;
}
.rank-name {
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translate(-50%, -0.1rem);
  font-size: 0.5rem;
  color: inherit;
  white-space: nowrap;
}
.crazy-dice-board.four-players .rank-name {
  transform: translate(-50%, -0.05rem);
  font-size: 0.6rem;
}
.curved-name {
  width: 120%;
  height: 1.2rem;
  pointer-events: none;
  overflow: visible;
}
.curved-name text {
  fill: currentColor;
  font-size: 0.5rem;
}

/* Score display below each avatar */
.player-score {
  position: absolute;
  top: calc(100% + 1.3rem); /* below roll boxes with space */
  left: 50%;
  transform: translateX(-50%);
  font-size: 0.5rem;
  color: inherit;
  white-space: nowrap;
  padding: 0 0.2rem;
}

/* Horizontal history of previous rolls */
.roll-history {
  position: absolute;
  /* Directly below avatar */
  top: calc(100% + 0.1rem);
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  gap: 0.15rem;
}

.roll-box {
  width: 1.1rem;
  height: 1.1rem;
  border: 1px solid currentColor;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.85rem;
  border-radius: 0.15rem;
  background-color: rgba(0, 0, 0, 0.25);
}

.turn-indicator {
  position: absolute;
  top: 50%;
  right: -1.2rem;
  transform: translateY(-50%);
  pointer-events: none;
}

.your-turn-message {
  position: absolute;
  bottom: calc(100% + 0.7rem);
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  align-items: center;
  gap: 0.25rem;
  white-space: nowrap;
  font-size: 1rem;
  font-weight: bold;
  border: none;
  background: transparent;
  padding: 0;
}

.timer-count {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 0.65rem;
  font-weight: bold;
  color: white;
  pointer-events: none;
}

.token-cube-inner {
  position: relative;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
  /* Align token with board surface while showing a slight side angle */
  transform: rotateX(calc(var(--board-angle, 58deg) * -1 - 20deg))
    rotateY(25deg);
}

.cube-face {
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: var(--side-color);
  border: 1px solid var(--border-color);
  border-radius: 0.5rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);
}

.cube-top {
  object-fit: cover;
  background-color: transparent;
  transform: rotateX(90deg) translateZ(2rem);
}

.cube-bottom {
  transform: rotateX(-90deg) translateZ(2rem);
}

.cube-front {
  transform: rotateY(0deg) translateZ(2rem);
}

.cube-back {
  transform: rotateY(180deg) translateZ(2rem);
}

.cube-right {
  transform: rotateY(90deg) translateZ(2rem);
}

.cube-left {
  transform: rotateY(-90deg) translateZ(2rem);
}

.token-top {
  @apply w-full h-full object-cover;
  clip-path: polygon(25% 5%, 75% 5%, 100% 50%, 75% 95%, 25% 95%, 0% 50%);
  position: absolute;
  top: 0;
  left: 0;
  transform: translateZ(var(--cyl-h));
}

.token-base {
  @apply w-full h-full absolute;
  clip-path: polygon(25% 5%, 75% 5%, 100% 50%, 75% 95%, 25% 95%, 0% 50%);
  background-color: var(--side-color, #facc15);
  border: 1px solid var(--border-color, #d97706);
  top: calc(100% + var(--cyl-h));
  left: 0;
  transform: translateZ(0);
}

.hex-cylinder {
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  height: var(--cyl-h);
  transform-style: preserve-3d;
  transform-origin: center bottom;
}

.token-pillar {
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  height: var(--cyl-h);
  transform-style: preserve-3d;
  transform-origin: center bottom;
}

.pillar-face {
  position: absolute;
  left: calc(50% - var(--token-radius) / 2);
  width: var(--token-radius);
  height: 100%;
  background-color: var(--side-color, #facc15);
  border: 1px solid var(--border-color, #d97706);
}

.pillar-front {
  transform: rotateY(0deg) translateZ(var(--cyl-apothem));
}
.pillar-right {
  transform: rotateY(-60deg) translateZ(var(--cyl-apothem));
}
.pillar-left {
  transform: rotateY(60deg) translateZ(var(--cyl-apothem));
}

.hex-side {
  position: absolute;
  left: calc(50% - var(--token-radius) / 2);
  width: var(--token-radius);
  height: 100%;
  background-color: var(--side-color, #facc15);
  border: 1px solid var(--border-color, #d97706);
}

.side-1 {
  transform: rotateY(0deg) translateZ(var(--cyl-apothem));
}
.side-2 {
  transform: rotateY(60deg) translateZ(var(--cyl-apothem));
}
.side-3 {
  transform: rotateY(120deg) translateZ(var(--cyl-apothem));
}
.side-4 {
  transform: rotateY(180deg) translateZ(var(--cyl-apothem));
}
.side-5 {
  transform: rotateY(240deg) translateZ(var(--cyl-apothem));
}
.side-6 {
  transform: rotateY(300deg) translateZ(var(--cyl-apothem));
}

/* Token color variations */
.token-yellow {
  --side-color: #fde047; /* yellow-300 */
  --border-color: #d97706; /* amber-600 */
}

.token-blue {
  --side-color: #93c5fd; /* blue-300 */
  --border-color: #1d4ed8; /* blue-700 */
}

.token-red {
  --side-color: #fca5a5; /* red-300 */
  --border-color: #b91c1c; /* red-700 */
}

.token-green {
  --side-color: #86efac; /* green-300 */
  --border-color: #16a34a; /* green-700 */
}

.board-cell.highlight {
  box-shadow: 0 0 10px 4px rgba(250, 204, 21, 0.8);
}

.board-cell.normal-highlight {
  background-color: #fde047; /* yellow-300 */
}

.board-cell.path-highlight {
  background-color: #fde047;
}

.board-cell.forward-highlight {
  background-color: #fde047;
}

.board-cell.back-highlight {
  background-color: #fca5a5;
}

.board-cell.forward-highlight .cell-marker,
.board-cell.forward-highlight .dice-marker,
.board-cell.back-highlight .cell-marker,
.board-cell.back-highlight .dice-marker {
  transform: translate(-50%, -50%) translateZ(6px) rotateX(calc(var(--board-angle, 58deg) * -1));
}

.board-cell.ladder-cell.forward-highlight,
.board-cell.snake-cell.forward-highlight,
.board-cell.dice-cell.forward-highlight {
  background-color: #fde047;
}

.board-cell.ladder-cell.back-highlight,
.board-cell.snake-cell.back-highlight,
.board-cell.dice-cell.back-highlight {
  background-color: #fca5a5;
}

.board-cell.path-highlight .cell-marker,
.board-cell.path-highlight .dice-marker {
  transform: translate(-50%, -50%) translateZ(6px) rotateX(calc(var(--board-angle, 58deg) * -1));
}
.board-cell.ladder-cell.normal-highlight,
.board-cell.snake-cell.normal-highlight {
  background-color: #fde047; /* yellow-300 */
}

.board-cell.ladder-highlight {
  background-color: #86efac; /* green-300 */
}

.board-cell.snake-highlight {
  background-color: #fca5a5; /* red-300 */
}

.board-cell.ladder-cell.ladder-highlight {
  background-color: #86efac; /* green-300 */
}

.board-cell.snake-highlight .cell-marker,
.board-cell.ladder-highlight .cell-marker,
.board-cell.dice-cell.normal-highlight .dice-marker {
  transform: translate(-50%, -50%) translateZ(6px)
    rotateX(calc(var(--board-angle, 58deg) * -1)) scale(3);
}

.board-cell.snake-highlight .cell-icon,
.board-cell.ladder-highlight .cell-icon,
.board-cell.snake-highlight .dice-icon,
.board-cell.ladder-highlight .dice-icon,
.board-cell.dice-cell.normal-highlight .dice-icon {
  transform: scale(1);
}

.board-cell.snake-cell.snake-highlight {
  background-color: #fca5a5; /* red-300 */
}

/* Indicate ladder or snake on the board */
.board-cell.ladder-cell {
  background-color: #86efac; /* green-300 */
}

.board-cell.snake-cell {
  background-color: #fca5a5; /* red-300 */
}

.board-cell.snake-cell,
.board-cell.ladder-cell,
.board-cell.dice-cell {
  color: #ffffff;
}

.board-cell.dice-cell {
  background-color: inherit;
  color: #ffffff;
}

.cell-marker {
  position: absolute;
  top: 65%;
  left: 50%;
  /* Center icons slightly lower within the tile */
  transform: translate(-50%, -50%) translateZ(6px)
    rotateX(calc(var(--board-angle, 58deg) * -1));
  display: flex;
  align-items: center;
  justify-content: center; /* keep icon and offset perfectly centred */
  gap: 2px;
  pointer-events: none;
  z-index: 3; /* ensure icons appear above connectors */
  transition: transform 0.3s ease;
}

.offset-text {
  font-size: 1.1rem;
  font-weight: bold;
  text-shadow: 0 0 2px #000;
  transform: rotateX(calc(var(--board-angle, 58deg) * -1));
}

.snake-text {
  color: #ef4444;
}

.ladder-text {
  color: #22c55e;
}

.cell-icon {
  width: calc(var(--cell-width) * 0.85);
  height: calc(var(--cell-height) * 0.85);
  object-fit: contain;
  transition: transform 0.3s ease;
}

.cell-emoji {
  font-size: calc(var(--cell-height) * 0.65);
  line-height: 1;
}

/* Start cell icon tweaks */
.board-cell[data-cell="1"] .cell-icon {
  width: 4.8rem;
  height: 4.8rem;
  animation: hex-spin 10.5s linear infinite;
  transform-origin: center;
}

.board-cell[data-cell="1"] .cell-emoji {
  font-size: 4.8rem;
  animation: hex-spin 10.5s linear infinite;
  transform-origin: center;
}

/* Rotate the start cell icon in place */
.board-cell[data-cell="1"] .cell-marker {
  animation: start-sway 2.5s ease-in-out infinite;
  top: 61%;
  transform: translate(-50%, -50%) translateZ(6px);
  transform-style: preserve-3d;
}

.start-rotate {
  animation: start-rotate 6s linear infinite;
}

/* Center the start cell number inside the enlarged hexagon */
.board-cell[data-cell="1"] .cell-number {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@keyframes start-rotate {
  from {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  to {
    transform: translate(-50%, -50%) rotate(-360deg);
  }
}

@keyframes start-sway {
  0%,
  100% {
    transform: translate(-50%, -50%) rotateY(-15deg);
  }
  50% {
    transform: translate(-50%, -50%) rotateY(15deg);
  }
}


.cell-number {
  position: relative;
  z-index: 1;
  color: #ffffff;
  font-family: "Comic Sans MS", "Comic Sans", cursive;
  font-weight: bold;
  font-size: 1.3rem; /* slightly bigger numbers */
  line-height: 1;
  text-shadow: 0 0 2px #000;
  transform: translateY(-10%);
}

/* Small hexagonal frame for the starting cell number */


.turn-message {
  color: #ff0000;
  font-family: "Comic Sans MS", "Comic Sans", cursive;
  font-weight: bold;
  font-size: 1.8rem;
  line-height: 1;
  text-shadow: 0 0 2px #fff;
}

.roll-result {
  color: #ffffff;
  font-family: "Comic Sans MS", "Comic Sans", cursive;
  font-weight: bold;
  text-shadow: 0 0 2px #000;
}

.crazy-dice-board .roll-result {
  position: absolute;
  top: -3.5rem;
  left: 50%;
  transform: translateX(-50%);
}

.reward-dice-container {
  display: flex;
  gap: 0.5rem;
}

.reward-dice {
  width: 3rem;
  height: 3rem;
  animation: popup-move 1s ease-out forwards;
}

.pot-cell {
  @apply absolute flex flex-col items-center justify-center;
  width: calc(var(--cell-width) * 2.7);
  height: calc(var(--cell-height) * 2.7);
  /* move the pot slightly higher */
  top: calc(var(--cell-height) * -7.1);
  left: 50%;
  transform: translateX(-50%) translateZ(12px);
  z-index: 50;
  background-color: transparent;
  border: none;
  box-shadow: none;
  pointer-events: none;
}

/* Center any tokens and hexagons inside the pot */
.pot-cell .token-three,
.pot-cell .start-hexagon {
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) translateZ(32px);
}


.pot-cell.highlight {
  box-shadow: 0 0 10px 4px rgba(250, 204, 21, 0.8);
}

.logo-wall-main {
  @apply absolute flex items-center justify-center;
  /* make the logo 5% bigger */
  width: calc(var(--cell-width) * 10.5);
  height: calc(var(--cell-height) * 5.25);
  /* move the logo slightly up */
  top: calc(
    var(--cell-height) * -8.7 - var(--cell-height) * 1.7 *
      (var(--final-scale, 1) - 1)
  );
  left: 48%;
  transform: translateX(-50%) rotateX(calc(var(--board-angle, 58deg) * -1))
    translateZ(-90px) scale(2.31); /* 5% larger */
  transform-origin: bottom center;
  background-image:
    linear-gradient(to bottom, rgba(0, 0, 0, 0.25), rgba(0, 0, 0, 0) 70%),
    url("/assets/icons/TonPlayGramLogo.webp");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  filter: brightness(1.2);
  z-index: 5;
}

.logo-wall-main::before,
.logo-wall-main::after {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: 0.75rem;
  pointer-events: none;
}


.logo-wall-main::before {
  border-left: 6px solid #334155;
  border-right: 6px solid #334155;
}

.logo-wall-main::after {
  border-top: 6px solid #334155;
  border-bottom: 6px solid #334155;
  box-shadow:
    0 0 10px rgba(0, 0, 0, 0.8),
    inset 0 0 10px rgba(0, 0, 0, 0.5);
}


.snake-connector,
.ladder-connector {
  position: absolute;
  height: 12px;
  transform-origin: 0 50%;
  z-index: 2;
  display: flex;
  align-items: center;
  justify-content: center;
}

.connector-icon {
  width: 1.2rem;
  height: 1.2rem;
  object-fit: contain;
}


.coin-burst {
  position: absolute;
  left: 50%;
  bottom: 50%;
  width: 0;
  height: 0;
  z-index: 60;
  pointer-events: none;
  overflow: visible;
}

.dice-travel {
  position: fixed;
  left: 0;
  top: 0;
  pointer-events: none;
  z-index: 101;
}

.coin-img {
  position: absolute;
  left: -16px;
  bottom: 0;
  width: 32px;
  height: 32px;
  transform: translate(-50%, 0);
  animation-name: coin-up;
  animation-duration: var(--dur);
  animation-delay: var(--delay);
  animation-timing-function: ease-out;
  animation-fill-mode: forwards;
  filter: brightness(1.5) drop-shadow(0 0 4px gold);
}

.board-emojis {
  position: absolute;
  bottom: 1rem;
  right: 1rem;
  font-size: 2rem;
  pointer-events: none;
  z-index: 10;
}

@keyframes coin-up {
  to {
    transform: translate(calc(-50% + var(--dx)), 160px);
    opacity: 0;
  }
}

.popup-offset {
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translate(-50%, 0);
  pointer-events: none;
  font-size: 3rem;
  animation: popup-move 1s ease-out forwards;
}

@keyframes popup-move {
  from {
    opacity: 1;
    transform: translate(-50%, 0);
  }
  to {
    opacity: 0;
    transform: translate(-50%, -30px);
  }
}

.dice-marker {
  position: absolute;
  width: 1.6rem;
  height: 1.6rem;
  left: 50%;
  top: 55%;
  transform: translate(-50%, -50%) translateZ(6px)
    rotateX(calc(var(--board-angle, 58deg) * -1));
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: none;
  z-index: 4;
  transition: transform 0.3s ease;
}

.dice-marker .dice-icon {
  width: 1.6rem;
  height: 1.6rem;
  object-fit: contain;
  transition: transform 0.3s ease;
}

.dice-value {
  margin-left: 0.2rem;
  font-size: 0.9rem;
  font-weight: bold;
  color: #3b82f6;
  text-shadow: 0 0 2px #000;
  transform: rotateX(calc(var(--board-angle, 58deg) * -1));
}


.start-hexagon {
  position: absolute;
  inset: 0;
  margin: auto;
  width: var(--cell-height);
  height: var(--cell-height);
  background-color: var(--hex-color, #3f3f46);
  border: 3px solid var(--hex-border-color, #27272a);
  box-sizing: border-box;
  clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
  transform: translateZ(6px);
  pointer-events: none;
  z-index: 0;
  animation: hex-spin var(--hex-spin-duration, 10.5s) linear infinite;
}


@keyframes hex-spin-reverse {
  from {
    transform: translateZ(0) rotateX(var(--board-angle, 58deg)) rotate(0deg);
  }
  to {
    transform: translateZ(0) rotateX(var(--board-angle, 58deg)) rotate(-360deg);
  }
}

@keyframes hex-spin {
  from {
    transform: translateZ(6px) rotate(0deg);
  }
  to {
    transform: translateZ(6px) rotate(-360deg);
  }
}

/*
.tile-frame {
  border: 3px solid rgba(255, 230, 0, 0.9);
  border-radius: 0.5rem;
  pointer-events: none;
  animation: tile-pulse 1.5s ease-in-out infinite;
  box-shadow: 0 0 8px rgba(255, 230, 0, 0.6);
}
*/

/*
@keyframes tile-pulse {
  0%,
  100% {
    box-shadow: 0 0 8px rgba(255, 230, 0, 0.6);
  }
  50% {
    box-shadow: 0 0 16px rgba(255, 230, 0, 1);
  }
}
*/

.prism-box {
  @apply relative flex items-center justify-center rounded-lg bg-surface border border-border;
}

.lobby-tile {
  @apply relative flex items-center justify-center rounded-xl text-white font-semibold;
  background-color: #2d5c66;
  border: 2px solid #334155;
  padding: 0.25rem 0.5rem;
}

.lobby-selected {
  box-shadow: 0 0 10px 4px rgba(250, 204, 21, 0.8);
  border-color: #facc15;
  color: #facc15;
}

.board-style {
  background-color: #0e3b45;
  color: #ffffff;
}
.friend-background{
  transform: translateY(70px) scale(1.98);
}

.friend-background.flip-vertical{
  transform: translateY(70px) scale(1.98) scaleY(-1);
}

/* Slightly larger background for the profile page */
.account-background{
  transform: translateY(90px) scale(1.35);
}

.weather-bg {
  transition: background 1s ease;
}
.weather-bg.clear.day {
  background: linear-gradient(#87ceeb, #fefefe);
}
.weather-bg.clear.night {
  /* Dark purple night sky */
  background: linear-gradient(#001d3d, #1a082c);
}
.weather-bg.clouds.day {
  background: linear-gradient(#cbd5e1, #94a3b8);
}
.weather-bg.clouds.night {
  background: linear-gradient(#4b5563, #1e293b);
}
.weather-bg.rain {
  background: linear-gradient(#64748b, #1e3a8a);
}
.weather-bg.thunderstorm {
  background: linear-gradient(#475569, #0f172a);
}
.weather-bg.snow {
  background: linear-gradient(#f8fafc, #e2e8f0);
}
.weather-bg.mist {
  background: linear-gradient(#e2e8f0, #94a3b8);
}

/* Sky background with animated planes */
.sky-background {
  position: absolute;
  inset: 0;
  background: linear-gradient(to bottom, #99caff 0%, #eaf6ff 80%);
}
.sky-background::after {
  content: '';
  position: absolute;
  inset: 0;
  background-image:
    radial-gradient(circle at 15% 20%, rgba(255, 255, 255, 0.8) 0%, rgba(255, 255, 255, 0) 60%),
    radial-gradient(circle at 70% 30%, rgba(255, 255, 255, 0.7) 0%, rgba(255, 255, 255, 0) 60%),
    radial-gradient(circle at 50% 80%, rgba(255, 255, 255, 0.6) 0%, rgba(255, 255, 255, 0) 60%);
  background-size: 200% 100%;
  animation: clouds-move 60s linear infinite;
}
.plane {
  transform: translateX(-50px);
}
.plane .trail {
  position: absolute;
  top: 45%;
  width: 2px;
  height: 60px;
  background: rgba(255, 255, 255, 0.7);
  animation: trail-fade 20s linear infinite;
}
.plane .trail.left {
  left: -4px;
}
.plane .trail.right {
  right: -4px;
}
@keyframes trail-fade {
  0% {
    opacity: 0.7;
  }
  100% {
    opacity: 0;
  }
}
@keyframes fly-0 {
  from {
    transform: translateX(-50px);
  }
  to {
    transform: translateX(110vw);
  }
}
@keyframes fly-1 {
  from {
    transform: translateX(-50px);
  }
  to {
    transform: translateX(110vw);
  }
}

@keyframes clouds-move {
  from {
    background-position: 0 0, 0 0, 0 0;
  }
  to {
    background-position: -400px 0, 400px 0, -200px 0;
  }
}

/* Store page styles */
.store-card {
  @apply prism-box flex-col space-y-2 rounded-xl p-4 items-center w-full;
  box-shadow: 0 0 12px rgba(0, 247, 255, 0.5);
}

.buy-button {
  @apply lobby-tile w-full rounded-full cursor-pointer text-black bg-primary;
  box-shadow: 0 0 8px #00f7ff, 0 0 16px #00f7ff;
}

/* Utility class to widen cards edge-to-edge */
.wide-card {
  @apply -mx-4;
}




.coin-confetti {
  position: fixed;
  top: -40px;
  width: 32px;
  height: 32px;
  pointer-events: none;
  animation: coin-fall var(--duration, 3s) linear forwards;
}

@keyframes coin-fall {
  from {
    transform: translateY(-10vh) rotate(0deg);
    opacity: 1;
  }
  to {
    transform: translateY(100vh) rotate(360deg);
    opacity: 0;
  }
}

.chat-bubble{ @apply fixed bottom-4 left-1/2 -translate-x-1/2 bg-black bg-opacity-70 text-white rounded px-2 py-1 flex items-center space-x-2; font-size:1.2rem; }

.crazy-dice-board {
  position: relative;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  /* Ensure the entire board image is visible */
}
.crazy-dice-board .board-bg {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  /* Center the board background */
  object-position: center;
  transform: none;
  filter: brightness(1.6);
  z-index: -1;
}
.crazy-dice-board .dice-center {
  position: absolute;
  /* Default center aligned with J20 */
  top: 66%;
  left: 48%;
  transform: translate(-50%, -50%);
}

/* Dice landing spot when facing two opponents */
.crazy-dice-board.three-players .dice-center {
  top: 66%;
  left: 48%;
}

/* Adjust dice landing spot for 1v1 games */
.crazy-dice-board.two-players .dice-center {
  top: 72%;
}

/* Player positions around the Crazy Dice board */
.crazy-dice-board .player-bottom {
  position: absolute;
  /* Position aligned with J28 */
  bottom: 8%;
  left: 50%;
  transform: translateX(-50%);
}

/* Position of the bottom avatar when facing two opponents */
.crazy-dice-board.three-players .player-bottom {
  bottom: 9%;
  left: 50%;
}

/* Adjust bottom player position for 1v1 games */
.crazy-dice-board.two-players .player-bottom {
  bottom: 8%;
}

.crazy-dice-board .player-left {
  position: absolute;
  top: 17.5%;
  left: 5%;
  transform: translate(-50%, -50%);
}

.crazy-dice-board.three-players .player-left {
  /* Moved slightly left and up for better spacing */
  top: 19.5%;
  left: 6.5%;
}

.crazy-dice-board .player-center {
  position: absolute;
  top: 18%;
  /* Nudged slightly to the right */
  left: 52%;
  transform: translate(-50%, -50%);
}

/* Slightly shift opponent avatar left in 1v1 games */
.crazy-dice-board.two-players .player-center {
  left: 51%;
}
.crazy-dice-board .player-center .player-score,
.crazy-dice-board .player-center .roll-history {
  transform: translateX(-60%);
}
.crazy-dice-board .player-left .player-score,
.crazy-dice-board .player-left .roll-history {
  /* Move boxes slightly further left */
  transform: translateX(-45%);
}
.crazy-dice-board .player-right .player-score,
.crazy-dice-board .player-right .roll-history {
  /* Shift right side slightly right */
  transform: translateX(-60%);
}

/* Position roll boxes and scores for top players around row 9/10 */
.crazy-dice-board .player-left .roll-history,
.crazy-dice-board .player-center .roll-history,
.crazy-dice-board .player-right .roll-history {
  /* Roll history positioned a consistent distance below avatars */
  top: calc(100% + 5rem);
}
.crazy-dice-board .player-left .player-score,
.crazy-dice-board .player-center .player-score,
.crazy-dice-board .player-right .player-score {
  /* Scores sit slightly above the roll history */
  top: calc(100% + 4rem);
}

/* Slight adjustments for the bottom player's info */
.crazy-dice-board .player-bottom .roll-history {
  top: calc(100% + 0.25rem);
}
.crazy-dice-board .player-bottom .player-score {
  top: calc(100% + 1.45rem);
}

.crazy-dice-board.three-players .player-bottom .roll-history {
  top: calc(100% + 2rem);
}
.crazy-dice-board.three-players .player-bottom .player-score {
  top: calc(100% + 3.4rem);
}

.crazy-dice-board .player-right {
  position: absolute;
  /* Nudge slightly lower for better alignment */
  top: 19%;
  right: 5%;
  transform: translate(50%, -50%);
}

.crazy-dice-board.three-players .player-right {
  /* Shifted more to the left */
  top: 20%;
  right: 9%;
}
.crazy-dice-board.four-players .player-left {
  /* Move the top left avatar closer to the screen edge */
  top: 21%;
  left: 6%;
}
.crazy-dice-board.four-players .player-center {
  top: 17%;
  left: 48%;
}
.crazy-dice-board.four-players .player-center .player-score,
.crazy-dice-board.four-players .player-center .roll-history {
  /* Nudge boxes slightly to the right */
  transform: translateX(-55%);
}
.crazy-dice-board.four-players .player-right {
  /* Lower and nudged further right */
  top: 21%;
  right: 6%;
}
.crazy-dice-board.four-players .player-bottom {
  /* Raise the bottom player slightly */
  bottom: 9%;
}
.crazy-dice-board.four-players .player-bottom .roll-history {
  /* Place roll boxes a little further down */
  top: calc(100% + 2rem);
}
.crazy-dice-board.four-players .player-bottom .player-score {
  /* Score should appear below the roll boxes */
  top: calc(100% + 3.4rem);
}
.crazy-dice-board.four-players .player-left .player-score,
.crazy-dice-board.four-players .player-center .player-score,
.crazy-dice-board.four-players .player-right .player-score {
  /* Keep scores for all top players on the same row */
  top: calc(100% + 4rem);
}
.crazy-dice-board.four-players .player-left .roll-history,
.crazy-dice-board.four-players .player-center .roll-history,
.crazy-dice-board.four-players .player-right .roll-history {
  /* And align their roll boxes */
  top: calc(100% + 5rem);
}



/* Rolling dice animation */
.dice-screen-animation {
  position: fixed;
  bottom: 3rem;
  left: 3rem;
  animation: dice-bounce 2.5s ease-in-out forwards;
  pointer-events: none;
  z-index: 100;
}

.dice-travel {
  position: fixed;
  pointer-events: none;
  transform: translate(-50%, -50%) scale(1);
  z-index: 101;
}

/* Image that appears under the dice when the bottom player rolls */
.dice-trail-img {
  position: absolute;
  bottom: -3rem;
  left: 50%;
  width: 10rem;
  transform: translateX(-50%) translateY(100%);
  pointer-events: none;
  animation: dice-trail-rise 0.6s ease-out forwards;
  z-index: -1;
}

@keyframes dice-trail-rise {
  0% {
    opacity: 0;
    transform: translateX(-50%) translateY(100%);
  }
  50% {
    opacity: 1;
    transform: translateX(-50%) translateY(0);
  }
  100% {
    opacity: 0;
    transform: translateX(-50%) translateY(0);
  }
}

@keyframes dice-bounce {
  0% {
    transform: translate(0, 0) scale(0.4) rotate(0deg);
  }
  20% {
    transform: translate(30vw, -20vh) scale(1) rotate(360deg);
  }
  40% {
    transform: translate(-25vw, -50vh) scale(1) rotate(720deg);
  }
  60% {
    transform: translate(25vw, 10vh) scale(1) rotate(1080deg);
  }
  80% {
    transform: translate(-20vw, 20vh) scale(1) rotate(1440deg);
  }
  100% {
    transform: translate(50vw, 40vh) scale(0.4) rotate(1800deg);
  }
}
